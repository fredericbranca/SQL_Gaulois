SQL Gaulois

A partir du script SQL Gaulois fourni par votre formateur, écrivez et exécutez les requêtes SQL suivantes :

1. Nom des lieux qui finissent par 'um'.

    SELECT *
    FROM gaulois.lieu //FROM gaulois.lieu peut-être écrit simplement FROM lieu
    WHERE nom_lieu LIKE '%um';

2. Nombre de personnages par lieu (trié par nombre de personnages décroissant).

    SELECT gaulois.lieu.id_lieu, gaulois.lieu.nom_lieu, COUNT(gaulois.personnage.id_lieu) AS nombre_personnages
    FROM gaulois.lieu
    INNER JOIN gaulois.personnage ON gaulois.lieu.id_lieu = gaulois.personnage.id_lieu //On utilise INNER JOIN plutot que WHERE pour les jointures 
    GROUP BY gaulois.lieu.id_lieu
    ORDER BY nombre_personnages DESC;

Simplifié avec des "alias" :

    SELECT l.id_lieu, l.nom_lieu, COUNT(p.id_lieu) AS nbPerso
    FROM lieu l
    INNER JOIN personnage p ON l.id_lieu = p.id_lieu 
    GROUP BY l.id_lieu 
    ORDER BY nbPerso DESC;

3. Nom des personnages + spécialité + adresse et lieu d'habitation, triés par lieu puis par nom de personnage.

    SELECT p.nom_personnage, s.nom_specialite, p.adresse_personnage, l.nom_lieu
    FROM personnage p
    INNER JOIN specialite s ON p.id_specialite = s.id_specialite
    INNER JOIN lieu l ON p.id_lieu = l.id_lieu
    ORDER BY l.nom_lieu, p.nom_personnage;

4. Nom des spécialités avec nombre de personnages par spécialité (trié par nombre de
personnages décroissant).

    SELECT s.nom_specialite, COUNT(p.id_specialite) AS nbPerso
    FROM personnage p
    INNER JOIN specialite s ON p.id_specialite = s.id_specialite
    GROUP BY p.id_specialite
    ORDER BY nbPerso DESC;

5. Nom, date et lieu des batailles, classées de la plus récente à la plus ancienne (dates affichées
au format jj/mm/aaaa).

    SELECT b.nom_bataille, DATE_FORMAT(b.date_bataille, "%d/%m/%Y") AS dateB, l.nom_lieu
    FROM bataille b
    INNER JOIN lieu l ON b.id_lieu = l.id_lieu
    ORDER BY dateB ASC;

6. Nom des potions + coût de réalisation de la potion (trié par coût décroissant).

SELECT p.nom_potion, SUM(c.qte * i.cout_ingredient) AS cout_potion
FROM potion p
LEFT JOIN composer c ON c.id_potion = p.id_potion //permet de lister les ingrédients même s'ils ne sont pas présent dans la table jointe 
LEFT JOIN ingredient i ON c.id_ingredient = i.id_ingredient
GROUP BY p.id_potion
ORDER BY cout_potion DESC;

